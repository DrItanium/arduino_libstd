/**
 * @file
 * cstdint interface
 * @copyright
 * Copyright (c) 2019-2023, Joshua Scoggins
 * 
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 * 
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 * 
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 */

#ifndef LIBSTD_CSTDINT_H__
#define LIBSTD_CSTDINT_H__
extern "C" {
#include <stdint.h>
}
namespace std {
    using int8_t = ::int8_t;
    using int16_t = ::int16_t;
    using int32_t = ::int32_t;
    using int64_t = ::int64_t;
    using int_fast8_t =  ::int_fast8_t;
    using int_fast16_t = ::int_fast16_t;
    using int_fast32_t = ::int_fast32_t;
    using int_fast64_t = ::int_fast64_t;
    using uint_fast8_t =  ::uint_fast8_t;
    using uint_fast16_t = ::uint_fast16_t;
    using uint_fast32_t = ::uint_fast32_t;
    using uint_fast64_t = ::uint_fast64_t;
    using int_least8_t =  ::int_least8_t;
    using int_least16_t = ::int_least16_t;
    using int_least32_t = ::int_least32_t;
    using int_least64_t = ::int_least64_t;
    using uint_least8_t =  ::uint_least8_t;
    using uint_least16_t = ::uint_least16_t;
    using uint_least32_t = ::uint_least32_t;
    using uint_least64_t = ::uint_least64_t;
    using uint8_t = ::uint8_t;
    using uint16_t = ::uint16_t;
    using uint32_t = ::uint32_t;
    using uint64_t = ::uint64_t;
    using intmax_t = ::intmax_t;
    using intptr_t = ::intptr_t;
    using uintmax_t = ::uintmax_t;
    using uintptr_t = ::uintptr_t;
#ifdef __avr__
	using int24_t = __int24;
	using uint24_t = __uint24;
#endif
} // end namespace std

#endif // end LIBSTD_CSTDINT_H__
